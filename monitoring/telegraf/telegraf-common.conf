[global_tags]
  origin = "salt"

[[outputs.influxdb]]
  urls = ["http://openqa-monitor.qa.suse.de:8086"]
  database = "telegraf"
  username = "admin"
  password = "admin"
  user_agent = "telegraf/osd"

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "udf", "nfs", "nfs4", "overlay", "aufs", "squashfs", "iso9660"]

[[inputs.diskio]]
  device_tags = [ "SCSI_TYPE", "ID_BUS", "DESCRIPTION" ]
  [inputs.diskio.tagdrop]
    name = [ "sr*" ]
    SCSI_TYPE = [ "cd/dvd" ]
    ID_BUS = [ "usb" ]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.net]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

[[inputs.chrony]]

{#- Refer https://gitlab.suse.de/openqa/salt-pillars-openqa/-/blob/master/openqa/commonconf.sls -#}
{%- set commonconf = pillar.get('commonconf', {}) %}
{%- set nfspath = commonconf.get('nfspath', {}) %}
{%- set hostconf = commonconf.get(grains['host'], {}) %}
{%- set exclude_regexes = [] %}
{%- for config in [commonconf, hostconf] -%}
{%-   if 'service_exclude_regex' in config -%}
{%-     do exclude_regexes.append(config['service_exclude_regex']) -%}
{%-   endif -%}
{%- endfor -%}
{%- if nfspath is not none -%}
{%- if nfspath is string -%}
{%- set nfs_unit = [] %}
{%- do nfs_unit.append(nfspath) -%}
{%- elif nfspath is mapping -%}
{%- set nfs_unit=nfspath.get('source', []) -%}
{%- else -%}
{{ raise('Error: nfspath in commonconf.sls must be either a string or dict') }}
{%- endif -%}
{%- if nfs_unit|length and nfs_unit != 'None' -%}
{%- for nfs in nfs_unit -%}
{%- set n = nfs.split(':', 1)[-1][1:] | replace('/', '-') -%}
{%-   do exclude_regexes.append('%s\\.automount' % n) -%}
{%- endfor -%}
{%- endif -%}
{%- endif -%}
{%- set service_exclude_regex = '' %}
{%- if exclude_regexes | length -%}
{%-   set service_exclude_regex = '(%s)' % (exclude_regexes | join('|')) %}
{%- endif %}

[[inputs.exec]]
  commands = [ '/etc/telegraf/scripts/systemd_list_service_by_state_for_telegraf.sh --state failed --exclude "{{ service_exclude_regex }}"' ]
  data_format = "influx"

[[inputs.exec]]
  commands = [ '/etc/telegraf/scripts/systemd_list_service_by_state_for_telegraf.sh --state masked --exclude "{{ service_exclude_regex }}"' ]
  data_format = "influx"
